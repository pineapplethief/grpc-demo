#!/usr/bin/env ruby

# frozen_string_literal: true

this_dir = File.expand_path(File.dirname(__FILE__))
lib_dir = File.join(this_dir, 'lib')
$LOAD_PATH.unshift(lib_dir) unless $LOAD_PATH.include?(lib_dir)

protobuf_dir = File.join(this_dir, '../server/lib/protobuf-autogenerated')
$LOAD_PATH.unshift(protobuf_dir) unless $LOAD_PATH.include?(protobuf_dir)

require_relative './../server/lib/protobuf-autogenerated/tasks_services_pb'


def main
  hostname = 'localhost:33377'
  stub = Tasks::TasksService::Stub.new(hostname, :this_channel_is_insecure)

  begin
    title = 'hey'

    task = ::Tasks::Task.new(title: title, description: 'do something')

    request = ::Tasks::AddTaskRequest.new(task: task)

    response = stub.add_task(request)

    puts "Task added successfully?: #{response.success}"

    request = ::Tasks::FinishTaskRequest.new(title: title)

    response = stub.finish_task(request)

    puts "Task finished successfully: #{response.task.inspect}"

    request = ::Tasks::DeleteTaskRequest.new(title: title)

    response = stub.delete_task(request)
    puts "Task deleted successfully?: #{response.success}"
  rescue GRPC::BadStatus => e
    abort "GRPC ERROR: #{e.message}"
  end
end

main
